import type { NextPage } from "next";
import Head from "next/head";
import { AnimatedTitle } from "../components/AnimatedTitle";
import { Button } from "../components/Button";
import { Credits } from "../components/Credits";
import styles from "../styles/Home.module.css";
import { createAvatar } from "@dicebear/avatars";
import * as style from "@dicebear/avatars-identicon-sprites";
import { useEffect, useState } from "react";
import { Avatar } from "../components/Avatar";
import Settings from "@mui/icons-material/Settings";
import { LIGHT_THEME } from "../constants/themes";
import {
  Modal,
  ModalBody,
  ModalCloseButton,
  ModalContent,
  ModalFooter,
  ModalHeader,
  ModalOverlay,
  useDisclosure,
} from "@chakra-ui/react";
import HowToPlay from "../components/HowToPlay";
import { SettingsModal } from "../components/SettingsModal";
import {
  getBGColor,
  getColor,
  getPrimaryColor,
  getTextColor,
} from "../utils/customizationsFunctions";
import { colorOptions } from "../data/colorOptions";

const Home: NextPage = () => {
  const [profileImg, setProfileImg] = useState<string>("");
  const { isOpen, onOpen, onClose } = useDisclosure();
  const {
    isOpen: playIsOpen,
    onOpen: playOnOpen,
    onClose: playOnClose,
  } = useDisclosure();

  useEffect(() => {
    const id = localStorage.getItem("pfpid");
    if (!id) {
      localStorage.setItem("pfpid", Math.floor(Math.random() * 200).toString());
      localStorage.setItem("theme", JSON.stringify(LIGHT_THEME));
      localStorage.setItem("color", colorOptions[0].color);
    }

    let svg = createAvatar(style, {
      seed: localStorage.getItem("pfpid")!!,
      dataUri: true,
    });
    setProfileImg(svg);
  }, []);

  if (typeof window === "undefined") return <h1>loading</h1>;

  return (
    <div
      className={styles.container}
      style={{
        background: getBGColor(),
        height: "100%",
      }}
    >
      <SettingsModal isOpen={isOpen} onClose={onClose} onOpen={onOpen} />
      <div className={styles.headerContainer}>
        <div className={styles.headerItems}>
          <Settings
            style={{ color: getColor(), cursor: "pointer", fontSize: 30 }}
            onClick={onOpen}
          />
          <HowToPlay onClick={playOnOpen} />
          <Avatar profileImg={profileImg} />
        </div>
      </div>

      <Modal isOpen={playIsOpen} onClose={playOnClose} isCentered>
        <ModalOverlay />
        <ModalContent padding={30}>
          <ModalHeader style={{ alignSelf: "center", fontSize: 25 }}>
            How To Play
          </ModalHeader>
          <ModalCloseButton
            style={{
              backgroundColor: "transparent",
              border: "none",
              cursor: "pointer",
            }}
          />
          <ModalBody alignSelf={"center"}>
            <p>Basically some cheese but better.</p>
          </ModalBody>

          <ModalFooter></ModalFooter>
        </ModalContent>
      </Modal>
      <Head>
        <title>Categories</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className={styles.main}>
        <h1 className={styles.title}>
          <AnimatedTitle />
        </h1>

        <p className={styles.description} style={{ color: getPrimaryColor() }}>
          An Absolute Entertainment.
        </p>

        <div>
          <Button title="Daily Category" height={30} width={50} />
        </div>
        <div style={{ position: "relative", top: 30, right: 15 }}>
          <Button title="Practice Match" height={30} width={50} disabled />
        </div>
        <div style={{ position: "relative", top: 60, right: 20 }}>
          <Button title="Multiplayer (PVP)" height={30} width={50} disabled />
        </div>
      </main>

      <footer>
        <Credits />
      </footer>
    </div>
  );
};

export default Home;
